properties([
	gitLabConnection('gitlab')
])

node('words-linux') {         
    try {
		gitlabCommitStatus("checkout") {
		   stage('checkout'){
				checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-node.git']]])
			
				sh "git config user.email \"jenkins.aspose@gmail.com\""
				sh "git config user.name \"jenkins\""
				
				withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', usernameVariable: 'gitUsername', passwordVariable: 'gitPass')]) {
					gitRepoUrl = "https://${gitUsername}:${gitPass}@git.auckland.dynabic.com/words-cloud/words-cloud-node.git"
				}
		   }
		}
       
        docker.image('node:latest').inside{
			gitlabCommitStatus("build package") {	   
				stage('build package'){
				   withEnv([
				   /* Override the npm cache directory to avoid: EACCES: permission denied, mkdir '/.npm' */
				   'npm_config_cache=npm-cache',
				   /* set home to our current directory because other bower
					* nonsense breaks with HOME=/, e.g.:
					* EACCES: permission denied, mkdir '/.config'
					*/
				   'HOME=.',
				   ]) {
					   sh "npm install"
					   sh "npm run gulp buildRelease"
					   packageName = sh(returnStdout: true, script: 'npm pack').trim()
					   
					}
				
					stash name: "newPackage", includes: "${packageName}"					
			    }
			}
		}
	
		gitlabCommitStatus("Merge master to testPackage") {
			stage('Merge master to testPackage'){			
				sh "git checkout --merge testPackage"
				sh "git reset --hard origin/testPackage"
				sh "git merge --no-ff --allow-unrelated-histories origin/master"
				sh "git diff --name-status"			
				sh 'git commit -am "Merged master branch to testPackage" || exit 0'
				sh "git push ${gitRepoUrl} testPackage"
			}
		}
	
		gitlabCommitStatus("Merge master to testPackage") {
			stage('add reference to new package'){
				unstash 'newPackage'	
				docker.image('node:latest').inside{
					 withEnv([
					   /* Override the npm cache directory to avoid: EACCES: permission denied, mkdir '/.npm' */
					   'npm_config_cache=npm-cache',
					   /* set home to our current directory because other bower
						* nonsense breaks with HOME=/, e.g.:
						* EACCES: permission denied, mkdir '/.config'
						*/
					   'HOME=.',
					   ]) {
						sh "npm uninstall asposewordscloud"
						sh "npm install ${packageName}"
					}
				}
				
				sh "git diff --name-status"
				sh "git ls-files --others --exclude-standard"
				sh "git add -A"
				sh 'git commit -am "new version of package added to repository" || exit 0'
				sh "git push ${gitRepoUrl} testPackage"		
			}
		}
		    			                
    } finally {                       
        deleteDir()
		sh 'docker system prune -f'
    }
}

stage('test package'){
	build job: 'words-node-sdk', 
	   parameters: [
		string(name: 'branch', value: 'testPackage')						
	   ]
}   

stage('wait for publish confirmation'){
	timeout(time:1, unit:'DAYS') {
		input message:'Publish packet?'
	}
}

node('words-linux') {         
    try {
		gitlabCommitStatus("checkout again") {
			stage('checkout again'){
			   checkout([$class: 'GitSCM', branches: [[name: '*/testPackage']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '361885ba-9425-4230-950e-0af201d90547', url: 'https://git.auckland.dynabic.com/words-cloud/words-cloud-node.git']]])          
						
				sh "git config user.email \"jenkins.aspose@gmail.com\""
				sh "git config user.name \"jenkins\""
				
				withCredentials([usernamePassword(credentialsId: '361885ba-9425-4230-950e-0af201d90547', usernameVariable: 'gitUsername', passwordVariable: 'gitPass')]) {
					gitRepoUrl = "https://${gitUsername}:${gitPass}@git.auckland.dynabic.com/words-cloud/words-cloud-node.git"
				}

				sh "git checkout testPackage"
				sh "git reset --hard origin/testPackage"
			}
		}
		
		gitlabCommitStatus("publish package") {
			stage('publish package'){
				docker.image('node:latest').inside{
					withEnv([
					/* Override the npm cache directory to avoid: EACCES: permission denied, mkdir '/.npm' */
					'npm_config_cache=npm-cache',
						/* set home to our current directory because other bower
						* nonsense breaks with HOME=/, e.g.:
						* EACCES: permission denied, mkdir '/.config'
						*/
					'HOME=.',
					]) {
					withCredentials([string(credentialsId: '19f0eab9-c600-4746-a4bd-724efd2102c8', variable: 'npmToken')]) {
						sh "echo //registry.npmjs.org/:_authToken=${npmToken} > .npmrc"
						sh "npm publish ${packageName}"
					}
					}
				}				
			}
		}
		
		gitlabCommitStatus("change reference to published package") {
			stage('change reference to published package'){
				docker.image('node:latest').inside{           
					withEnv([
					/* Override the npm cache directory to avoid: EACCES: permission denied, mkdir '/.npm' */
					'npm_config_cache=npm-cache',
						/* set home to our current directory because other bower
						* nonsense breaks with HOME=/, e.g.:
						* EACCES: permission denied, mkdir '/.config'
						*/
					'HOME=.',
					]) {
						sh "npm uninstall asposewordscloud"
						sh "npm install asposewordscloud"              
					}				
				}

				sh "git diff --name-status"
				sh 'git commit -am "reference changed to published package" || exit 0'
				sh "git push ${gitRepoUrl} testPackage"						
			}
		}
		
		gitlabCommitStatus("add version tag") {
			stage('add version tag') {
				final fullVersion = packageName.substring(packageName.lastIndexOf('@') + 1, packageName.length())
				final version = fullVersion.substring(0, fullVersion.lastIndexOf('.'))

				sh "git tag -a ${version} -m \"version ${version}\"" 
				sh "git push ${gitRepoUrl} ${version}"
			}
		}
    } finally {                       
        deleteDir()
		sh 'docker system prune -f'
    }
} 